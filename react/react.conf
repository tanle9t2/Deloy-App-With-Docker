proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:60m inactive=60m;
proxy_cache_key "$request_method$host$request_uri";
proxy_cache_valid 200 60m;

upstream nodejs-api {
	least_conn;
	server nodejs:3000;
}

log_format nodejs_log '[$time_local] $remote_addr - $remote_user - $server_name $host to: $upstream_addr: $request $status upstream_response_time $upstream_response_time';

server {
	listen 443 ssl;
    server_name dashboard.ou.org;

    ssl_certificate /etc/ssl/certs/selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/selfsigned.key;

	access_log /var/log/nginx/nodejs.access.log nodejs_log;

	location ~* ^/assets/.*\.(jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|css|js)$ {
		root /usr/share/nginx/react_html;
		expires 30d;
		gzip_static on;
        gzip_comp_level 5;
	}

	location / {
		root /usr/share/nginx/react_html;
		try_files $uri $uri/ /index.html;
	}

	location /nodejs-api {
		rewrite /nodejs-api/(.*) /$1 break;
		proxy_pass http://nodejs-api;
		proxy_read_timeout 7;
		proxy_connect_timeout 5;
		proxy_next_upstream_tries 2;
		proxy_next_upstream error timeout;
	}
}

server {
	listen 80;
	server_name dashboard.ou.org;

	return 301 https://$host$request_uri;
}











        
		# expires 5m;        
        # proxy_cache_lock on;
        # proxy_cache_background_update on;
        # proxy_cache_min_uses 1;

        # proxy_cache my_cache;
		# proxy_cache_methods GET;
		# proxy_cache_revalidate on;

		# add_header X-Proxy-Cache $upstream_cache_status;
        # add_header Last-Modified $date_gmt;
        # if_modified_since exact;